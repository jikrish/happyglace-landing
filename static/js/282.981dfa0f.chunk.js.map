{"version":3,"file":"static/js/282.981dfa0f.chunk.js","mappings":"gNAkBA,MA6FA,GAAeA,EAAAA,EAAAA,IAAf,EA7FqBC,IASK,IATJ,KACpBC,EAAI,MACJC,EAAK,QACLC,EAAO,QACPC,EAAO,OACPC,EAAM,EACNC,EAAC,GACDC,EAAE,UACFC,GACkBR,EAQlB,OACES,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACJ,UAAWA,EAAWK,aAAW,EAAAF,UACrCG,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CACRC,QAAQ,gBACRC,MAAM,SACNV,GAAIA,EACJC,UAAWA,EAAUG,SAAA,EAErBF,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCF,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CAACC,IAAKvB,EAAMwB,MAAM,OAAOC,OAAO,YAE1CjB,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCG,EAAAA,EAAAA,MAACa,EAAAA,GAAc,CAAAhB,SAAA,EACbF,EAAAA,EAAAA,KAAA,MAAAE,SAAKL,EAAEJ,MACPO,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAAAjB,SAAEL,EAAEH,KACG,UAAdK,GACCC,EAAAA,EAAAA,KAACoB,EAAAA,GAAa,CAAAlB,SACO,kBAAXN,GACNA,EAAOyB,KACL,CACEC,EAIAxB,KAGEE,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAELC,MAAOF,EAAKE,MACZC,QAASA,IAtCjB3B,KACA4B,SAASC,eAAe7B,GAChC8B,eAAe,CACrBC,SAAU,UACV,EAkCqCC,CAAS,SAAS5B,SAEhCL,EAAEyB,EAAK7B,QAJHK,QAWjBE,EAAAA,EAAAA,KAAC+B,EAAAA,GAAc,CAAA7B,UACbF,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACzB,QAAQ,+BA+BV,G,0ICxGd,MAAMN,GAAiBgC,EAAAA,EAAAA,IAAO,UAAPA,CAAiBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6IASlChB,GAAUc,EAAAA,EAAAA,IAAO,IAAPA,CAAWG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,sCAIrB7B,GAAY2B,EAAAA,EAAAA,IAAOD,EAAAA,EAAPC,CAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kCAChB5C,IAAA,IAAC,UAAEQ,GAAkCR,EAAA,MACvC,SAAdQ,EAAuB,MAAQ,aAAa,IAGnCmB,GAAiBe,EAAAA,EAAAA,IAAO,MAAPA,CAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oIAS9BJ,GAAiBE,EAAAA,EAAAA,IAAO,MAAPA,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mFAe9BK,IATWP,EAAAA,EAAAA,IAAO,KAAPA,CAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0KASZF,EAAAA,EAAAA,IAAO,KAAPA,CAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,+IAYvBf,IAJUa,EAAAA,EAAAA,IAAO,IAAPA,CAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+BAILF,EAAAA,EAAAA,IAAO,MAAPA,CAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,gN","sources":["components/ContentBlock/index.tsx","components/ContentBlock/styles.ts"],"sourcesContent":["import { Row, Col } from 'antd';\r\nimport { Fade } from 'react-awesome-reveal';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport { ContentBlockProps } from './types';\r\nimport { Button } from '../../common/Button';\r\nimport { SvgIcon } from '../../common/SvgIcon';\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from './styles';\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {direction === 'right' ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === 'object' &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo('about')}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {/* {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )} */}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n","import { Row } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const ContentSection = styled('section')`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled('p')`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === 'left' ? 'row' : 'row-reverse'};\r\n`;\r\n\r\nexport const ContentWrapper = styled('div')`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled('div')`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled('h6')`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: 'Motiva Sans Light', sans-serif;\r\n`;\r\n\r\nexport const MidTitle = styled('h6')`\r\n  font-size: 30px;\r\n  line-height: 2rem;\r\n  padding: 0.5rem 0;\r\n  color: #18216d;\r\n  font-family: 'Motiva Sans Light', sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled('p')`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled('div')`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n"],"names":["withTranslation","_ref","icon","title","content","section","button","t","id","direction","_jsx","ContentSection","children","Fade","triggerOnce","_jsxs","StyledRow","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","ContentWrapper","Content","ButtonWrapper","map","item","Button","color","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","ServiceWrapper","Row","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","MidTitle","_templateObject6","_templateObject7","_templateObject8","_templateObject9"],"sourceRoot":""}